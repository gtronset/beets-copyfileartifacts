name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'

env:
  PYTHON_VERSION: 3.11
  POETRY_VERSION: 1.4.2

jobs:

  release:
    name: Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 - --version ${{ env.POETRY_VERSION }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'poetry'

      - name: Update PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - if: ${{ github.event.act }}
        name: Set Poetry to use TestPyPi
        run: |
          poetry config repositories.test-pypi https://test.pypi.org/legacy/
          poetry config pypi-token.test-pypi ${{ secrets.PYPI_TOKEN }}
          echo "POETRY_REPO=-r test-pypi" >> $GITHUB_ENV

      - name: Build project for distribution
        run: poetry build

      - name: Tag Name
        id: tag-name
        uses: SebRollen/toml-action@v1.0.2
        with:
          file: 'pyproject.toml'
          field: 'tools.poetry.version'

      # - name: Tag Name
      #   id: tag-name
      #   env:
      #     TAG_REF: ${{ github.event.push.ref }}
      #   run: |
      #     echo name=${TAG_REF#refs/tags/} >> $GITHUB_OUTPUT

      - name: Tag Test
        id: tag-test
        run: |
          echo ${{ steps.tag-name.outputs.value }}

      - name: Check Version
        id: check-version
        run: |
          [[ "$(poetry version --short)" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]] || echo prerelease=true >> $GITHUB_OUTPUT

      # - name: Create Release
      #   uses: ncipollo/release-action@v1
      #   with:
      #     artifacts: "dist/*"
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     tag: "${{ steps.tag-name.outputs.name }}"
      #     draft: false
      #     generateReleaseNotes: true
      #     prerelease: steps.check-version.outputs.prerelease == 'true'

      # - name: Publish to PyPI
      #   env:
      #     POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
      #   run: poetry publish ${{ env.POETRY_REPO }}
